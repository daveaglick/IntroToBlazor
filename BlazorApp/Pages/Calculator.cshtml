@page "/calc"
@page "/calculator"

<h1>Calculator</h1>

<div class="row">
    <div class="col-md-4">
        <p>
            <input class="form-control" @bind(input)>
        </p>

        @if(error != null)
        {
            <p class="text-danger">@error</p>
        }

        <p>
            @if(a == null)
            {
                <button class="btn btn-primary" @onclick(Add)>+</button>    
                <button class="btn btn-primary" @onclick(Subtract)>-</button>
                <button class="btn btn-primary" disabled>=</button>
            }
            else
            {
                <button class="btn btn-primary" disabled>+</button>    
                <button class="btn btn-primary" disabled>-</button>
                <button class="btn btn-primary" @onclick(Calculate)>=</button>
            }
        </p>

        <p>
            <input class="form-control" readonly @bind(result)>
        </p>

        <p>
            A: @a<br/>
            Operation: @operation<br/>
            B: @b
        </p>
    </div>
</div>

@functions {
    enum Operation
    {
        None, Add, Subtract
    }

    string input = null;
    int? a = null;
    int? b = null;
    Operation operation = Operation.None;
    string result = null;
    string error = null;

    void Add()
    {
        if(DataInput())
        {
            operation = Operation.Add;
        }
    }

    void Subtract()
    {
        if(DataInput())
        {
            operation = Operation.Subtract;
        }
    }

    bool DataInput()
    {
        if(string.IsNullOrEmpty(input))
        {
            return false;
        }
        try
        {
            if(a == null)
            {
                a = Int32.Parse(input);
            }
            else
            {
                b = Int32.Parse(input);
            }            
        }
        catch (System.Exception ex)
        {
            error = ex.Message;
            return false;
        }
        error = null;
        input = null;
        return true;
    }

    void Calculate()
    {
        if(DataInput())
        {
            switch(operation)
            {
                case Operation.Add:
                    result = (a.Value + b.Value).ToString();
                    break;
                case Operation.Subtract:
                    result = (a.Value - b.Value).ToString();
                    break;
            }
            a = null;
            b = null;
            operation = Operation.None;
        }
    }
}